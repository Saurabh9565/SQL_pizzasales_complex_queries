select * from pizzas;
select * from orders;
select * from pizza_types;
select * from order_details;

-- retrieve the total numner of orders placed

select count(order_id) as total_orders from orders;

-- calculate the total revenue generated from pizza sales.

SELECT 
    ROUND(SUM(order_details.quantity * pizzas.price),
            2) AS revenue
FROM
    order_details
        JOIN
    pizzas ON order_details.pizza_id = pizzas.pizza_id;

--  Identify the highest price of pizza

SELECT 
    pizza_types.name, pizzas.price
FROM
    pizzas
        JOIN
    pizza_types ON pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY price DESC
LIMIT 1;

-- identify the most common pizza size ordered

select pizzas.size, count(order_details.order_details_id) as most_ordered
from pizzas
join order_details 
on pizzas.pizza_id = order_details.pizza_id
group by pizzas.size
order by most_ordered desc;

-- list the top 5 most ordered pizza types along with their quantities

select pizza_types.name, sum(order_details.quantity) count_tot
from pizzas
join pizza_types
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on pizzas.pizza_id = order_details.pizza_id
group by pizza_types.name
order by count_tot desc limit 5;

-- join the necessary table to find the total quantity of each category ordered

SELECT
    pizza_types.category, SUM(order_details.quantity) as quantity
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category
order by quantity desc;

-- find the revenue  generated by every category of pizza

select pizza_types.category, sum(pizzas.price * order_details.quantity)
from pizza_types
join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category
order by 1;

-- find number of orders made per hours

select hour(orders.time) as hrs, count(order_id) from orders
group by hrs order by count(order_id) desc;

-- join relevant table to find thhe category-wise distribution of pizza

select category, count(name) from pizza_types
group by category;

-- group the orders by date and calculate the numbers of pizzas ordered per day

select orders.date, sum(order_details.quantity) as summ
from orders
join order_details
on orders.order_id = order_details.order_id
group by orders.date  
;

-- group the orders by date and calculate the average numbers of pizzas ordered per day

select round(avg(summ),0) as avg_pizzas_per_day from
(select orders.date, sum(order_details.quantity) as summ
from orders
join order_details
on orders.order_id = order_details.order_id
group by orders.date order by summ desc) as order_qant
;

-- determine the top 3 most ordered pizza_types base on the revenue

SELECT 
    pizza_types.name,
    SUM(pizzas.price * order_details.quantity) AS revenue_per_category
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_types.name
ORDER BY 2 DESC
LIMIT 3
; 

-- calculate the percentage contribution of each pizza type based on their category to total revenue 

select pizza_types.category, 
	round((sum(pizzas.price * order_details.quantity) / (
		select sum(order_details.quantity * pizzas.price)
		from order_details
		join pizzas
		on pizzas.pizza_id = order_details.pizza_id))*100,2) as percentage 
from pizza_types
join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category;

-- analyze the cumulative sum generated over time

select date , sum(revenue) over (order by date) as cumulative_revenue from
(select orders.date,
sum(order_details.quantity * pizzas.price) as revenue
from order_details
join orders
on orders.order_id = order_details.order_id
join pizzas
on order_details.pizza_id = pizzas.pizza_id
group by orders.date) as sales;


-- determine the top 3 most order pizza types based on revenue  for each pizza category

select category, name, revenue, rnk from
(
select pizza_types.category, pizza_types.name, round(sum(pizzas.price * order_details.quantity),2) as revenue,
rank() over(partition by category order by sum(pizzas.price * order_details.quantity) desc) as rnk
from pizza_types
join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category , pizza_types.name 
order by 1, 3 desc) as revenue_per_category
where rnk <= 3
;
